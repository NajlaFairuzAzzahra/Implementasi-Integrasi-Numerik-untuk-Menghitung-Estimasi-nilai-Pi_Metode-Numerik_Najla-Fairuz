import numpy as np
import time

# Fungsi untuk menghitung integral menggunakan metode trapezoid
def trapezoid_integration(f, a, b, N):
    x = np.linspace(a, b, N+1)
    y = f(x)
    h = (b - a) / N
    integral = (h / 2) * (y[0] + 2 * np.sum(y[1:-1]) + y[-1])
    return integral

# Fungsi yang akan diintegrasikan
def f(x):
    return 4 / (1 + x**2)

# Nilai referensi pi
pi_reference = 3.14159265358979323846

# Fungsi untuk menghitung galat RMS
def rms_error(estimated_pi, reference_pi):
    return np.sqrt(np.mean((estimated_pi - reference_pi) ** 2))

# Variasi nilai N
N_values = [10, 100, 1000, 10000]

# Melakukan pengujian untuk setiap nilai N
for N in N_values:
    start_time = time.time()  # Mulai pengukuran waktu
    estimated_pi = trapezoid_integration(f, 0, 1, N)
    end_time = time.time()  # Selesai pengukuran waktu
    execution_time = end_time - start_time
    
    # Menghitung galat RMS
    error = rms_error(estimated_pi, pi_reference)
    
    # Menampilkan hasil
    print(f"N = {N}")
    print(f"Perkiraan Pi: {estimated_pi}")
    print(f"Galat RMS: {error}")
    print(f"Waktu Eksekusi: {execution_time} detik")
    print("-----------------------------")
